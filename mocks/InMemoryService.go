// Code generated by mockery v0.0.0-dev. DO NOT EDIT.

package mocks

import (
	errors "github.com/aahel/restapi/errors"
	mock "github.com/stretchr/testify/mock"

	types "github.com/aahel/restapi/types"
)

// InMemoryService is an autogenerated mock type for the InMemoryService type
type InMemoryService struct {
	mock.Mock
}

// GetData provides a mock function with given fields: key
func (_m *InMemoryService) GetData(key string) (*types.KeyValue, *errors.AppError) {
	ret := _m.Called(key)

	var r0 *types.KeyValue
	if rf, ok := ret.Get(0).(func(string) *types.KeyValue); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.KeyValue)
		}
	}

	var r1 *errors.AppError
	if rf, ok := ret.Get(1).(func(string) *errors.AppError); ok {
		r1 = rf(key)
	} else {
		if ret.Get(1) != nil {
			r1 = ret.Get(1).(*errors.AppError)
		}
	}

	return r0, r1
}

// PutData provides a mock function with given fields: kv
func (_m *InMemoryService) PutData(kv *types.KeyValue) *types.KeyValue {
	ret := _m.Called(kv)

	var r0 *types.KeyValue
	if rf, ok := ret.Get(0).(func(*types.KeyValue) *types.KeyValue); ok {
		r0 = rf(kv)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*types.KeyValue)
		}
	}

	return r0
}
